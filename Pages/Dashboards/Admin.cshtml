@page
@model MyApp.Namespace.AdminModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="mx-auto p-4 sm:p-6 lg:p-8 glass-effect rounded-lg">
    <h2 class="text-4xl themed-heading font-extrabold mb-6 border-b-4 pb-2 inline-block">Admin Dashboard</h2>


    <!-- Dashboard Overview Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="data-card glass-effect rounded-xl p-6 border flex items-center justify-between shadow-md">
            <div>
                <h3 class="text-lg font-semibold text-primary">Total Users</h3>
                <p class="text-4xl font-bold text-accent mt-2">6</p>
            </div>
            <svg class="w-12 h-12 text-blue-500 opacity-70" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20v-2c0-.653-.134-1.28-.387-1.857M17 20H7m10 0h-4m-4 0H7m4 0v-2c0-.653-.134-1.28-.387-1.857M7 20v-2a3 3 0 015.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.653-.134-1.28-.387-1.857M7 20H2v-2a3 3 0 015.356-1.857"></path></svg>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex items-center justify-between shadow-md">
            <div>
                <h3 class="text-lg font-semibold text-primary">Active Sessions</h3>
                <p class="text-4xl font-bold text-green-600 mt-2">87</p>
            </div>
            <svg class="w-12 h-12 text-green-500 opacity-70" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path></svg>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex items-center justify-between shadow-md">
            <div>
                <h3 class="text-lg font-semibold text-primary">Pending Approvals</h3>
                <p class="text-4xl font-bold text-yellow-600 mt-2">14</p>
            </div>
            <svg class="w-12 h-12 text-yellow-500 opacity-70" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex items-center justify-between shadow-md">
            <div>
                <h3 class="text-lg font-semibold text-primary">System Health</h3>
                <p class="text-4xl font-bold text-teal-600 mt-2">Good</p>
            </div>
            <svg class="w-12 h-12 text-teal-500 opacity-70" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c-1.31 0-2.54-.42-3.54-1.16M9 19a8.974 8.974 0 01-3.54-1.16M9 19a8.974 8.974 0 01-3.54-1.16"></path></svg>
        </div>
    </div>
    <!-- Employee Summary KPIs -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Total Employees</h3>
            <p class="text-4xl font-bold text-blue-600 mt-auto">1,250</p>
            <span class="text-sm text-gray-500">Active workforce</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">New Hires (Last 30 Days)</h3>
            <p class="text-4xl font-bold text-green-600 mt-auto">18</p>
            <span class="text-sm text-gray-500">Recent additions to the team</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Avg. Employee Tenure</h3>
            <p class="text-4xl font-bold text-purple-600 mt-auto">4.5 Years</p>
            <span class="text-sm text-gray-500">Average time with the company</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Voluntary Turnover Rate (Annual)</h3>
            <p class="text-4xl font-bold text-red-600 mt-auto">12.3%</p>
            <span class="text-sm text-gray-500">Last 12 months</span>
        </div>
    </div>

    <!-- Filter and Action Buttons -->
    <div class="mb-8 p-6 glass-effect rounded-xl border shadow-md">
        <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Filter Employees</h3>
        <div class="mb-4">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 items-center">
                <div>
                    <select id="jobTitleFilter" class="form-select w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                        <option value="">Filter by Job Title</option>
                        <option value="Manager">Manager</option>
                        <option value="Developer">Developer</option>
                        <option value="Analyst">Analyst</option>
                        <!-- Add more job titles as needed based on your data -->
                    </select>
                </div>
                <div>
                    <select id="departmentFilter" class="form-select w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                        <option value="">Filter by Department</option>
                        <option value="1">Human Resources</option>
                        <option value="2">Engineering</option>
                        <option value="3">Sales</option>
                        <option value="4">Marketing</option>
                        <!-- Add more departments as needed based on your data -->
                    </select>
                </div>
                <div>
                    <select id="companyFilter" class="form-select w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                        <option value="">Filter by Company</option>
                        @* Options will be populated by JavaScript from Model.Companies or an API *@
                        @* Assuming Model.Companies is available via Admin.cshtml.cs *@
                        
                    </select>
                </div>
            </div>
            <div class="flex flex-wrap items-center gap-4 mt-4">
                <button id="clearFiltersBtn" class="btn bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded shadow-md transition-all duration-200">
                    Clear All Filters
                </button>
                <!-- Badge Container for active filters -->
                <div id="activeFilterBadges" class="flex flex-wrap gap-2"></div>
            </div>
        </div>

        <div class="flex flex-wrap gap-4 items-center">
            <a href="/Employees/CreateEmployee" class="flex items-center px-6 py-3 btn-themed font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-blue-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                Add New Employee
            </a>
            <button class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-purple-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg>
                Manage Benefits
            </button>
            <button class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-yellow-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path></svg>
                Performance Reviews
            </button>
            <button id="toggleViewBtn_employeesTable" class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-green-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg>
                Switch to Card View
            </button>
            <button id="toggleChartBtn_employeesTable" class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-green-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm12 0a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm-7 0a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10z"></path></svg>
                Show Chart
            </button>
        </div>
    </div>

    <!-- Employees Table Container -->
    <div class="mb-8">
        <h3 class="text-2xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">All Employees</h3>
        <table id="employeesTable" class="display w-full text-left border-collapse rounded-lg shadow-md" style="width:100%">
            <thead>
                <tr>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider rounded-tl-xl">Employee ID</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Name</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Job Title</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Department</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Company</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Hire Date</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Employment Status</th>
                </tr>
            </thead>
            <tbody>
                @* DataTables will populate this tbody *@
            </tbody>
        </table>

        <div id="employeesTable-cards-container" class="mt-8 cards-grid-container grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" style="display: none;"></div>
        <div id="employeesTable-chart-container" style="display: none;">
            <canvas id="employeesTable-chart"></canvas>
        </div>
    </div>

    <!-- Employee Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <div class="data-card glass-effect rounded-xl p-6 border shadow-md">
            <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Employee Distribution by Department</h3>
            <div style="height: 300px;">
                <canvas id="employeeDepartmentDistributionChart"></canvas>
            </div>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border shadow-md">
            <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Headcount Trend (Last 12 Months)</h3>
            <div style="height: 300px;">
                <canvas id="headcountTrendChart"></canvas>
            </div>
        </div>
    </div>

    <div class="data-card glass-effect rounded-xl p-6 border shadow-md mb-8">
        <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Voluntary Turnover Rate (Annual)</h3>
        <div style="height: 350px;">
            <canvas id="turnoverRateChart"></canvas>
        </div>
    </div>
</div>

<!-- Employee Profile Modal -->
<div id="employeeProfileModal" class="fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-lg shadow-xl w-11/12 md:w-1/2 lg:w-1/3 flex flex-col p-6 glass-effect border">
        <div class="flex justify-between items-center pb-4 border-b border-gray-200 mb-4">
            <h3 id="employeeModalTitle" class="text-2xl font-bold text-primary">Employee Profile</h3>
            <button id="closeEmployeeProfileModalBtn" class="text-gray-500 hover:text-gray-700 focus:outline-none">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
            </button>
        </div>
        <div id="employeeProfileContent" class="text-gray-700 space-y-3 overflow-y-auto max-h-[70vh]">
            <p><strong>Employee ID:</strong> <span id="modalEmployeeId"></span></p>
            <p><strong>Name:</strong> <span id="modalEmployeeName"></span></p>
            <p><strong>Job Title:</strong> <span id="modalJobTitle"></span></p>
            <p><strong>Department:</strong> <span id="modalDepartment"></span></p>
            <p><strong>Company:</strong> <span id="modalCompany"></span></p>
            <p><strong>Hire Date:</strong> <span id="modalHireDate"></span></p>
            <p><strong>Employment Status:</strong> <span id="modalEmploymentStatus"></span></p>
            <p><strong>Gross Pay:</strong> <span id="modalGrossPay"></span></p>
            <p><strong>Contact Info:</strong> <span id="modalContactInfo"></span></p>
            <p class="text-sm text-gray-500 mt-4">More detailed information, suchs as performance reviews, benefits enrollment, and training history, can be integrated here.</p>
        </div>
    </div>
</div>

<!-- Management Links Section -->
<div class="mb-8">
    <h3 class="text-2xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Management Tools</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <a href="/Admin/Users" class="data-card glass-effect rounded-xl p-6 border hover:shadow-xl transition-shadow duration-300 flex items-center justify-center flex-col text-center">
            <svg class="w-16 h-16 text-blue-600 mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M12 20.646V17.5l-2.45-2.45a7 7 0 01-1.55-3.05 7 7 0 01-1.55-3.05L6 7.5l-2.45-2.45a7 7 0 01-3.05-1.55 7 7 0 01-3.05-1.55L2 4.354"></path></svg>
            <span class="text-xl font-semibold text-primary">User Management</span>
        </a>
        <a href="/Admin/Settings" class="data-card glass-effect rounded-xl p-6 border hover:shadow-xl transition-shadow duration-300 flex items-center justify-center flex-col text-center">
            <svg class="w-16 h-16 text-purple-600 mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.942 3.33.833 2.222 2.222a1.724 1.724 0 001.066 2.573c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.942 1.543-.833 3.33-2.222 2.222a1.724 1.724 0 00-2.573 1.066c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.942-3.33-.833-2.222-2.222a1.724 1.724 0 00-1.066-2.573c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.942-1.543.833-3.33 2.222-2.222a1.724 1.724 0 002.573-1.066z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
            <span class="text-xl font-semibold text-primary">App Settings</span>
        </a>
        <a href="/Admin/Reports" class="data-card glass-effect rounded-xl p-6 border hover:shadow-xl transition-shadow duration-300 flex items-center justify-center flex-col text-center">
            <svg class="w-16 h-16 text-orange-600 mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2v-6a2 2 0 012-2h2a2 2 0 012 2v6a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2z"></path></svg>
            <span class="text-xl font-semibold text-primary">View Reports</span>
        </a>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
               const employeesTableId = "employeesTable";
              // --- Filtering and Badge Logic ---
              function updateEmployeeTableFilters() {
                  const jobTitle = $('#jobTitleFilter').val();
                  const department = $('#departmentFilter').val();
                  const company = $('#companyFilter').val();

                  // Filter DataTable columns (adjust column indexes as needed)
                  const dt = $(`#${employeesTableId}`).DataTable();
                  // Job Title (column index 3)
                  dt.column(3).search(jobTitle, false, false);
                  // Department (column index 4)
                  dt.column(4).search(department, false, false);
                  // Company (column index 5)
                  dt.column(5).search(company, false, false);
                  dt.draw();

                  updateActiveFilterBadges();
              }

              function updateActiveFilterBadges() {
                  const jobTitle = $('#jobTitleFilter').val();
                  const department = $('#departmentFilter').val();
                  const company = $('#companyFilter').val();
                  const $badges = $('#activeFilterBadges');
                  $badges.empty();

                  if (jobTitle) {
                      $badges.append(`<span class="inline-flex items-center px-3 py-1 rounded-full bg-blue-100 text-blue-800 text-sm font-medium mr-2">
                          Job Title: ${$('#jobTitleFilter option:selected').text()}
                          <button type="button" class="ml-2 text-blue-500 hover:text-blue-700 focus:outline-none" onclick="$('#jobTitleFilter').val(''); $('#jobTitleFilter').trigger('change');">&times;</button>
                      </span>`);
                  }
                  if (department) {
                      $badges.append(`<span class="inline-flex items-center px-3 py-1 rounded-full bg-green-100 text-green-800 text-sm font-medium mr-2">
                          Department: ${$('#departmentFilter option:selected').text()}
                          <button type="button" class="ml-2 text-green-500 hover:text-green-700 focus:outline-none" onclick="$('#departmentFilter').val(''); $('#departmentFilter').trigger('change');">&times;</button>
                      </span>`);
                  }
                  if (company) {
                      $badges.append(`<span class="inline-flex items-center px-3 py-1 rounded-full bg-purple-100 text-purple-800 text-sm font-medium mr-2">
                          Company: ${$('#companyFilter option:selected').text()}
                          <button type="button" class="ml-2 text-purple-500 hover:text-purple-700 focus:outline-none" onclick="$('#companyFilter').val(''); $('#companyFilter').trigger('change');">&times;</button>
                      </span>`);
                  }
              }

              $('#jobTitleFilter, #departmentFilter, #companyFilter').on('change', updateEmployeeTableFilters);

              $('#clearFiltersBtn').on('click', function () {
                  $('#jobTitleFilter').val('');
                  $('#departmentFilter').val('');
                  $('#companyFilter').val('');
                  updateEmployeeTableFilters();
              });

               LoadDataTable({
                   tableId: employeesTableId,
                   ajaxUrl: "/api/Employees", // Assuming an API endpoint for employees
                   columns: [
                       {
                           data: null,
                           title: "Profile",
                           orderable: false,
                           searchable: false,
                           render: function (data, type, row) {
                               // Render a button to open the profile modal
                               return `<button class="text-blue-600 hover:text-blue-800 font-semibold" onclick="openEmployeeProfileModal('${row.employeeId}', '${row.firstName}', '${row.lastName}', '${row.jobTitle}', '${row.departmentId}', '${row.contactInfo}', ${row.grossPay || 0})">View Profile</button>`;
                           }
                       },
                       { data: "firstName", title: "First Name" },
                       { data: "lastName", title: "Last Name" },
                       { data: "jobTitle", title: "Job Title" },
                       { data: "departmentId", title: "Department ID" },
                       { data: "contactInfo", title: "Contact Info" },
                       {
                           data: null,
                           title: "Actions",
                           orderable: false,
                           searchable: false,
                           render: function (data, type, row) {
                               // Example action buttons - you can customize these
                               return `
                                   <button class="text-indigo-600 hover:text-indigo-900 mr-2">Edit</button>
                                   <button class="text-red-600 hover:text-red-900">Delete</button>
                               `;
                           }
                       }
                   ],
                   pageLength: 10,
                   initialIsCardView: false,
                   initialIsChartView: false,
                   cardViewRender: function (data) {
                       return `
                           <div class="data-card bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300">
                               <h3 class="text-xl font-bold text-blue-700 mb-2">${data.firstName} ${data.lastName}</h3>
                               <div class="card-item"><strong>Employee ID:</strong> <span>${data.employeeId}</span></div>
                               <div class="card-item"><strong>Job Title:</strong> <span>${data.jobTitle || 'N/A'}</span></div>
                               <div class="card-item"><strong>Department ID:</strong> <span>${data.departmentId || 'N/A'}</span></div>
                               <div class="card-item"><strong>Contact:</strong> <span>${data.contactInfo || 'N/A'}</span></div>
                               <div class="card-item"><strong>Gross Pay:</strong> <span>${$.fn.dataTable.render.number(',', '.', 2, '$').display(data.grossPay)}</span></div>
                               <button class="mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600" onclick="openEmployeeProfileModal('${data.employeeId}', '${data.firstName}', '${data.lastName}', '${data.jobTitle}', '${data.departmentId}', '${data.contactInfo}', ${data.grossPay || 0})">View Profile</button>
                           </div>
                       `;
                   },
                   chartConfig: {
                       type: 'pie', // Changed to pie chart for department distribution
                       processData: function (apiData, columns) {
                           // Group employees by Department ID and count them
                           const departmentCounts = {};
                           apiData.forEach(item => {
                               const department = item.departmentId || 'Unknown';
                               departmentCounts[department] = (departmentCounts[department] || 0) + 1;
                           });
                           const labels = Object.keys(departmentCounts);
                           const dataValues = labels.map(label => departmentCounts[label]);

                           return {
                               labels: labels,
                               datasets: [{
                                   label: 'Number of Employees by Department',
                                   data: dataValues,
                                   backgroundColor: [
                                       'rgba(255, 99, 132, 0.6)',
                                       'rgba(54, 162, 235, 0.6)',
                                       'rgba(255, 206, 86, 0.6)',
                                       'rgba(75, 192, 192, 0.6)',
                                       'rgba(153, 102, 255, 0.6)',
                                       'rgba(255, 159, 64, 0.6)',
                                       'rgba(199, 199, 199, 0.6)'
                                   ],
                                   borderColor: [
                                       'rgba(255, 99, 132, 1)',
                                       'rgba(54, 162, 235, 1)',
                                       'rgba(255, 206, 86, 1)',
                                       'rgba(75, 192, 192, 1)',
                                       'rgba(153, 102, 255, 1)',
                                       'rgba(255, 159, 64, 1)',
                                       'rgba(199, 199, 199, 1)'
                                   ],
                                   borderWidth: 1
                               }]
                           };
                       },
                       options: {
                           responsive: true,
                           maintainAspectRatio: false,
                           plugins: {
                               title: {
                                   display: true,
                                   text: 'Employee Distribution by Department',
                                   font: { size: 20, family: 'Inter, sans-serif', weight: 'bold' },
                                   color: '#333'
                               },
                               legend: {
                                   display: true,
                                   position: 'right',
                                   labels: {
                                       font: { family: 'Inter, sans-serif' }
                                   }
                               },
                               tooltip: {
                                   callbacks: {
                                       label: function(context) {
                                           let label = context.label || '';
                                           if (label) {
                                               label += ': ';
                                           }
                                           if (context.parsed !== null) {
                                               const total = context.dataset.data.reduce((sum, val) => sum + val, 0);
                                               const percentage = ((context.parsed / total) * 100).toFixed(2);
                                               label += `${context.parsed} (${percentage}%)`;
                                           }
                                           return label;
                                       }
                                   }
                               }
                           },
                           animation: {
                               duration: 1000,
                               easing: 'easeOutQuart'
                           },
                           font: {
                               family: 'Inter, sans-serif'
                           }
                       }
                   },
                   /* --- RowGroup extension configuration ---
                   rowGroup: {
                       dataSrc: 'departmentId',
                       startRender: function (rows, group) {
                           return `<span class="font-bold text-lg text-blue-800">Department: ${group} (${rows.count()} employees)</span>`;
                       }
                   }*/
               });

               // Table/Card toggle button
               $(`#toggleViewBtn_${employeesTableId}`).on('click', function () {
                   toggleTableView(employeesTableId);
                   const $btn = $(this);
                   const instanceState = dataTableManager[employeesTableId];
                   if (instanceState.isCardView) {
                       $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg>Switch to Table View');
                   } else {
                       $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg>Switch to Card View');
                   }
               });

               // Chart toggle button
               $(`#toggleChartBtn_${employeesTableId}`).on('click', function () {
                   toggleChartView(employeesTableId);
                   const $btn = $(this);
                   const instanceState = dataTableManager[employeesTableId];
                   if (instanceState.isChartView) {
                       $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm12 0V7m0 10a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm-6 0V7m0 10a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10z"></path></svg>Show Table/Card');
                   } else {
                       $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z"></path></svg>Show Chart');
                   }
               });

               // Attach event listener to close button of the modal
               document.getElementById('closeEmployeeProfileModalBtn').addEventListener('click', closeEmployeeProfileModal);


                       document.getElementById("playBtn").addEventListener("click", async () => {
               const response = await fetch('/Dashboards/Admin?handler=GenerateSpeech', {
                   method: 'POST'
               });

               if (response.ok) {
                   const result = await response.json();
                   const player = document.getElementById("forecastPlayer");
                   player.src = result.url;
                   player.hidden = false;
                   player.play();
               } else {
                   alert("❌ Failed to generate audio.");
               }
           });
           });
    </script>
}